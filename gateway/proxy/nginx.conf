worker_processes 4;

events { 
    worker_connections 1024;
}

http {
    upstream post_service {
        server post-service:3001;
        # server post-service1:3001;
    }

    upstream gateway {
        server gateway:3000;
    }

    upstream account_service {
        server account-service:3003;
    }

    upstream social_graph_service {
        server social-graph-service:3002;
    }

    upstream community_service {
        server community-service:3004;
    }

    server {
        listen 80;
        charset utf-8;

        # should have an api subdomain later on
        # should have basic html/css welcoming user to the api and how to use it (this requires building a gateway service)
        location / {
            proxy_pass http://gateway;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr; 
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            proxy_redirect off;
        }

        location ~ ^/post {
            rewrite ^/post/(.*) /$1 break;
            proxy_pass http://post_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr; 
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            proxy_redirect off;
        }

        location ~ ^/account {
            rewrite ^/account/(.*) /$1 break;
            proxy_pass http://account_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr; 
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            proxy_redirect off;
        }

        location ~ ^/social-graph {
            rewrite ^/social-graph/(.*) /$1 break;
            proxy_pass http://social_graph_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr; 
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            proxy_redirect off;
        }

        location ~ ^/community {
            rewrite ^/community/(.*) /$1 break;
            proxy_pass http://community_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr; 
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            proxy_redirect off;
        }        

    }
}